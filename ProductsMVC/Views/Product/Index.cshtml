@using ProductsMVC.Models
@model IEnumerable<ProductViewModel>

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions
    {
    public IList<ProductViewModel> SortProducts(IList<ProductViewModel> products)
    {
        var list = from p in products orderby p.Name select p;
        return list.ToList();

    }
}
@{
    Func<dynamic, object> b = @<strong>@item</strong>;
}

<div class="well well-sm"><h1>Available Products</h1></div>
<p>
    @*    @Html.ActionLink("Create New", "Create")*@
    <a href="@Url.Action("Create")">
        <span class="glyphicon glyphicon-plus"></span>&nbsp;Create a new Product
    </a>
</p>
<table class="table table-striped table-bordered table-hover table-responsive">
    <caption>Product List</caption>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th></th>
    </tr>
    @foreach (var item in SortProducts(Model.ToList()))
    {
        @*@ShowProduct(item)*@
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a href="@Url.Action("Edit", new {id = item.Id})"><span class="glyphicon glyphicon-edit"></span>&nbsp;Edit</a>
                &nbsp;|&nbsp;<a href="@Url.Action("Details", new {id = item.Id})"><span class="glyphicon glyphicon-list-alt"></span>&nbsp;Details</a>
                &nbsp;|&nbsp;<a href="@Url.Action("Delete", new {id = item.Id})"><span class="glyphicon glyphicon-trash"></span>&nbsp;Delete</a>
                
                @*<span class="glyphicon glyphicon-list">*@

            </td>
        </tr>
    }

</table>

